from sklearn import datasets
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt  # To visualize
import pandas as pd  # To read data


from sklearn.datasets import load_linnerud
linner = load_linnerud()
 
print(dir(linner))
print(linner.data)
print(linner.feature_names)
print(linner.target_names)
print(linner.target)
print(linner.data.shape)



plt.scatter(linner.data[:, 0], linner.target[:, 0])

#To label the axis and Title
plt.xlabel(linner.feature_names[0])
plt.ylabel(linner.target_names[0])
plt.title("{0} x {1}".format(linner.feature_names[0],linner.target_names[0]))
plt.show()

plt.scatter(linner.data[:, 0], linner.target[:, 1])

#To label the axis and Title
plt.xlabel(linner.feature_names[0])
plt.ylabel(linner.target_names[1])
plt.title("{0} x {1}".format(linner.feature_names[0],linner.target_names[1]))
plt.show()

plt.scatter(linner.data[:, 0], linner.target[:, 2])

#To label the axis and Title
plt.xlabel(linner.feature_names[0])
plt.ylabel(linner.target_names[2])
plt.title("{0} x {1}".format(linner.feature_names[0],linner.target_names[2]))
plt.show()


plt.scatter(linner.data[:, 1], linner.target[:, 1])

#To label the axis and Title
plt.xlabel(linner.feature_names[1])
plt.ylabel(linner.target_names[0])
plt.title("{0} x {1}".format(linner.feature_names[1],linner.target_names[0]))
plt.show()

# to plot the first column of features with first column of targets.....
plt.scatter(linner.data[:, 1], linner.target[:, 1])

#To label the axis and Title
plt.xlabel(linner.feature_names[1])
plt.ylabel(linner.target_names[1])
plt.title("{0} x {1}".format(linner.feature_names[1],linner.target_names[1]))
plt.show()

# to plot the second column of features with first column of targets.....
plt.scatter(linner.data[:, 1], linner.target[:, 2])

#To label the axis and Title
plt.xlabel(linner.feature_names[1])
plt.ylabel(linner.target_names[2])
plt.title("{0} x {1}".format(linner.feature_names[1],linner.target_names[2]))
plt.show()


# to plot the first column of features with first column of targets.....
plt.scatter(linner.data[:, 2], linner.target[:, 0])

#To label the axis and Title
plt.xlabel(linner.feature_names[2])
plt.ylabel(linner.target_names[0])
plt.title("{0} x {1}".format(linner.feature_names[2],linner.target_names[0]))
plt.show()

# to plot the first column of features with first column of targets.....
plt.scatter(linner.data[:, 2], linner.target[:, 1])

#To label the axis and Title
plt.xlabel(linner.feature_names[2])
plt.ylabel(linner.target_names[1])
plt.title("{0} x {1}".format(linner.feature_names[2],linner.target_names[1]))
plt.show()

# to plot the Second column of features with Second column of targets.....
plt.scatter(linner.data[:, 2], linner.target[:, 2])

#To label the axis and Title
plt.xlabel(linner.feature_names[2])
plt.ylabel(linner.target_names[2])
plt.title("{0} x {1}".format(linner.feature_names[2],linner.target_names[2]))
plt.show()

# to compare exercise variables
plt.scatter(linner.data[:, 0], linner.data[:, 1])

#To label the axis and Title
plt.xlabel(linner.feature_names[0])
plt.ylabel(linner.feature_names[1])
plt.title("{0} x {1}".format(linner.feature_names[0],linner.feature_names[1]))
plt.show()


# to compare exercise variables
plt.scatter(linner.data[:, 0], linner.data[:, 2])

#To label the axis and Title
plt.xlabel(linner.feature_names[0])
plt.ylabel(linner.feature_names[2])
plt.title("{0} x {1}".format(linner.feature_names[0],linner.feature_names[2]))
plt.show()

# to compare exercise variables
plt.scatter(linner.data[:, 1], linner.data[:, 2])

#To label the axis and Title
plt.xlabel(linner.feature_names[1])
plt.ylabel(linner.feature_names[2])
plt.title("{0} x {1}".format(linner.feature_names[1],linner.feature_names[2]))
plt.show()

#attempt at a fancy plot

sns.set_style("white")
gridobj = sns.lmplot(x=linner.feature_names[0], y=linner.feature_names[1], hue="cyl", data=linner.data, 
                     height=7, aspect=1.6, robust=True, palette='tab10', 
                     scatter_kws=dict(s=60, linewidths=.7, edgecolors='black'))

# Decorations
gridobj.set(xlim=(0,100), ylim=(0, 100))
plt.title("Scatterplot with line of best fit grouped by number of cylinders", fontsize=20)
plt.show()
